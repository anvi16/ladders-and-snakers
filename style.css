:root {
  --board-frame: red;
}
h1 {
  width: 100%;
  text-align: center;
}
* {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body {
  background-color: beige;
}
html,
body {
  height: 100%;
}
body {
  display: grid;
  place-content: center;
}
.jscolor-picker,
.jscolor-wrap {
  height: max-content !important;
  width: max-content !important;
}
.jscolor-wrap .jscolor-palette,
.jscolor-wrap .jscolor-palette-sw {
  position: relative !important;
  top: 0 !important;
  left: 0 !important;
}
.jscolor-palette-sw > div {
  width: 1.5rem !important;
  height: 1.5rem !important;
}
.jscolor-wrap .jscolor-palette {
  display: grid !important;
  gap: 0.2rem !important;
  grid-template-columns: repeat(4, 1fr) !important;
}
.jscolor-picker {
  padding: 1rem !important;
}
.jscolor-picker > *:not(.jscolor-palette) {
  display: none !important;
}
#number-of-players input {
  margin-bottom: 0.5rem;
  display: block;
  width: 100%;
  margin-top: 0.5rem;
}
#number-of-players:after {
  content: attr(data-error);
  color: red;
}
form#intro-form {
  height: max-content;
  transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1);
  display: flex;
  flex-direction: column;
  max-width: 500px;
  background-color: #fff;
  padding: 2rem;
  box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 1px 0px inset,
    rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,
    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;
}
* {
  box-sizing: border-box;
}
[data-player-picker-labels],
[data-player-pickers] {
  display: grid;
  grid-template-columns: 80% 20%;
  gap: 0.5rem;
  width: 100%;
}
[data-name-picker] {
  width: 100%;
}
#player,
#message {
  font-size: 1.25rem;
  text-align: center;
  width: 50%;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,
    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
}
#message {
  left: 0;
  background: white;
  color: #000;
}
#player {
  right: 0;
  background: yellow;
  color: #000;
}
input[data-color-picker] {
  border: 1px solid #000;
  width: 50px !important;
  box-sizing: border-box !important;
  color: transparent !important;
  overflow: hidden;
  cursor: pointer;
  border-radius: 4px;
}
#player-names {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  margin-bottom: 0.5rem;
}
button#create-players {
  background-color: greenyellow;
  cursor: pointer;
  display: none;
}
button#create-players.ready {
  display: block;
}

body:not(.game-ready) .gameBoard {
  display: none;
}
#ui {
  display: none;
  justify-content: center;
  gap: 1rem;
}
button#play {
  font-size: 1.5rem;
  line-height: 1;
  display: block;
  background-color: greenyellow;
}
.game-ready #ui {
  display: flex;
  align-items: center;
}
#gameBoardOuter {
  min-height: 80vh;
  background: red;
}
.gameBoard {
  width: 624px;
  height: auto;
  overflow: hidden;
  margin: 20px auto 0 auto;
  overflow: hidden;
}
.gameBoard > .gameBoardInner {
  width: 100%;
  margin: 0;
  height: auto;
  padding: 0;
  background: var(--board-frame);
  border: 12px solid var(--board-frame);
}

#player {
  grid-area: player;
  width: 100%;
}
#players-wrapper {
  grid-area: allplayers;
  width: 100%;
}
#dice {
  grid-area: dice;
  width: 100%;
}
#play {
  grid-area: playbtn;
  width: 100%;
}
#message {
  grid-area: message;
  width: 100%;
}
.gameBoard > .gameInterface {
  background: var(--board-frame);
  width: 100%;
  height: auto;
  overflow: hidden;
  padding: 0;
  display: grid;
  gap: 1rem;
  padding: 1rem;
  padding-top: 0;
  grid-template-columns: auto auto auto auto;
  grid-template-areas:
    'player player message message'
    'allplayers allplayers dice playbtn';
}
.gameBoard > .gameInterface > .players {
  padding: 5px;
  background-color: beige;
  border-radius: 5px;
}
.gameBoard > .gameInterface > .players > div {
  margin: 2px 10px 0 5px;
  height: 25px;
  float: left;
}
.gameBoard > .gameInterface > .players > div::before {
  content: '';
  display: block;
  background: var(--player-color);
  float: left;
  width: 24px;
  height: 24px;
  box-shadow: inset -2px -2px #565656;
  margin-right: 5px;
  border-radius: 12px;
}
.dice {
  width: 64px;
  height: 64px;
}
.dice > div {
  width: 64px;
  height: 64px;
  margin: 0;
  padding: 8px;
  background-color: #e7e7e7;
  object-fit: contain;
  box-shadow: inset 0 2px white, inset 0 -2px #bbb, inset 2px 0 #d7d7d7,
    inset -2px 0 #d7d7d7;
  border-radius: 10%;
  float: left;
  overflow: hidden;
  display: none;
}
.dice > div:nth-of-type(1) {
  display: none;
  justify-content: center;
  align-items: center;
}
.dice > div:nth-of-type(2) {
  display: none;
  justify-content: space-between;
}
.dice > div:nth-of-type(2) > span:nth-of-type(2) {
  align-self: flex-end;
}
.dice > div:nth-of-type(2),
.dice > div:nth-of-type(3) {
  display: none;
  justify-content: space-between;
}
.dice > div:nth-of-type(3) > span:nth-of-type(2) {
  align-self: center;
}
.dice > div:nth-of-type(3) > span:nth-of-type(3) {
  align-self: flex-end;
}
.dice > div:nth-of-type(4),
.dice > div:nth-of-type(6) {
  display: none;
  justify-content: space-between;
}
.dice > div:nth-of-type(4) > div,
.dice > div:nth-of-type(6) > div {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.dice > div:nth-of-type(5) {
  display: none;
  justify-content: space-between;
}
.dice > div:nth-of-type(5) > div {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.dice > div:nth-of-type(5) > div:nth-of-type(2) {
  justify-content: center;
}
.dice > div > span,
.dice > div > div > span {
  display: block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  margin: 0;
  background-color: #333;
  box-shadow: inset 0 1px #111, inset 0 -1px #555;
}
.dice.show1 > div:nth-of-type(1) {
  display: flex;
}
.dice.show2 > div:nth-of-type(2) {
  display: flex;
}
.dice.show3 > div:nth-of-type(3) {
  display: flex;
}
.dice.show4 > div:nth-of-type(4) {
  display: flex;
}
.dice.show5 > div:nth-of-type(5) {
  display: flex;
}
.dice.show6 > div:nth-of-type(6) {
  display: flex;
}

p.credits {
  display: block;
  font-size: 13px;
  font-style: italic;
  clear: both;
  margin: 9px 0 0 2px;
  padding: 0;
}

button {
  border: none;
  border-radius: 5px;
  margin-top: 3px;
  padding-bottom: 3px;
  font-size: 16px;
  line-height: 19px;
  float: right;
}
button.disabled {
  opacity: 0.5;
  cursor: default;
}

.dialog {
  border-radius: 10px;
  background-color: var(--board-frame);
  box-shadow: -4px -4px #bababa;
  width: 220px;
  height: 120px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  display: none;
}
.dialog.show {
  display: block;
}
.dialog > h1 {
  font-size: 22px;
  margin-bottom: 20px;
  color: white;
  text-align: center;
}
.dialog > button {
  margin: auto;
  display: block;
  width: 100px;
  float: none;
  background: #cccccc;
}

@media only screen and (max-height: 500px) {
  .gameBoard > .gameInterface > .player {
    font-size: 14px;
    line-height: 15px;
    margin: 0 20px 3px 20px;
    width: 200px;
  }
  .gameBoard > .gameInterface > button {
    margin: 0 10px;
  }
  .gameBoard > .gameInterface > .players {
    height: 15px;
    padding-top: 1px;
  }
  .gameBoard > .gameInterface > .players > div {
    margin: 2px 2px 2px 0;
    font-size: 12px;
  }
  .gameBoard > .gameInterface > .players > div::before {
    height: 14px;
    width: 14px;
  }
}
@media only screen and (max-width: 550px) {
  .gameBoard > .gameInterface > .player {
    font-size: 14px;
    line-height: 15px;
    margin: 0 20px 3px 20px;
    width: calc(100% - 100px);
  }
  .gameBoard > .gameInterface > button {
    margin: 0 10px;
  }
  .gameBoard > .gameInterface > .players {
    height: 15px;
    padding-top: 1px;
  }
  .gameBoard > .gameInterface > .players > div {
    margin: 2px 2px 2px 0;
    font-size: 12px;
  }
  .gameBoard > .gameInterface > .players > div::before {
    height: 14px;
    width: 14px;
  }
}
